version: '3.8'
services:
  request_handler:
    depends_on:
      db:
        condition: service_healthy
      migrate_db:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    build:
      context: request_handler
      cache_from:
        - request_handler:latest
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_KEY_ID
      - AWS_BUCKET_NAME
      - POSTGRES_PASSWORD
      - RABBITMQ_USERNAME
      - RABBITMQ_PASSWORD
    image: request_handler:latest
    ports:
      - 5000:5000

  song_recognition:
    depends_on:
      db:
        condition: service_healthy
      migrate_db:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    build:
      context: song_recognition
      cache_from:
        - song_recognition:latest
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_KEY_ID
      - AWS_BUCKET_NAME
      - POSTGRES_PASSWORD
      - RABBITMQ_USERNAME
      - RABBITMQ_PASSWORD
    image: song_recognition:latest

  song_recommender:
    depends_on:
      db:
        condition: service_healthy
      migrate_db:
        condition: service_completed_successfully
    build:
      context: song_recommender
      cache_from:
        - song_recommender:latest
    environment:
      - POSTGRES_PASSWORD
      - EMAIL_USERNAME
      - EMAIL_PASSWORD
    image: song_recommender:latest

  db:
    image: postgres:16.1
    restart: always
    environment:
      POSTGRES_USER: request_manager
      POSTGRES_PASSWORD: db_password
      POSTGRES_DB: requests_db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "request_manager", "-d", "requests_db"]
      interval: 5s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data/

  migrate_db:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: migrations
      cache_from:
        - migrate_db:latest
    image: migrate_db:latest
    environment:
      - POSTGRES_PASSWORD

  rabbitmq:
    image: rabbitmq:3.13-management
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      retries: 10
    environment:
      RABBITMQ_DEFAULT_USER: request_manager
      RABBITMQ_DEFAULT_PASS: rabbitmq_password
      RABBITMQ_DEFAULT_VHOST: request_vhost
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  pg_data:
  rabbitmq_data:
