version: '3.8'
services:
  request_handler:
    depends_on:
      db:
        condition: service_healthy
      migrate_db:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    build:
      context: request_handler
      cache_from:
        - request_handler:latest
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_KEY_ID
      - AWS_BUCKET_NAME
      - POSTGRES_PASSWORD
    image: request_handler:latest
    ports:
      - 5000:5000

  db:
    image: postgres:16.1
    restart: always
    environment:
      POSTGRES_USER: request_manager
      POSTGRES_PASSWORD: db_password
      POSTGRES_DB: requests_db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "request_manager", "-d", "requests_db"]
      interval: 5s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data/

  migrate_db:
    image: postgres:16.1
    depends_on:
      db:
        condition: service_healthy
    command:
      - "bash"
      - "-c"
      - "./migrate_db.sh"
    environment:
      - POSTGRES_PASSWORD

  rabbitmq:
    image: rabbitmq:3.13-management
    healthcheck:
      test: ["CMD", "rabbitmqctl", "wait", "--timeout", "60", "rabbit@localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      RABBITMQ_DEFAULT_USER: request_manager
      RABBITMQ_DEFAULT_PASS: rabbitmq_password
      RABBITMQ_DEFAULT_VHOST: request_vhost
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  pg_data:
  rabbitmq_data:
